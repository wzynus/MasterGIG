"""empty message

Revision ID: b4aba8204940
Revises: 
Create Date: 2021-04-08 20:10:58.555806

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b4aba8204940'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_entity',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('bio', sa.String(length=500), nullable=True),
    sa.Column('dob', sa.DateTime(), nullable=True),
    sa.Column('profile_pic', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(length=64), nullable=True),
    sa.Column('active_status', sa.Boolean(), nullable=True),
    sa.Column('admin__status', sa.Boolean(), nullable=True),
    sa.Column('wallet_balance', sa.Integer(), nullable=True),
    sa.Column('credit_card_number', sa.Integer(), nullable=True),
    sa.Column('credit_card_ccv_hashed', sa.String(length=128), nullable=True),
    sa.Column('credit_card_expiry', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_entity_email'), 'user_entity', ['email'], unique=True)
    op.create_index(op.f('ix_user_entity_username'), 'user_entity', ['username'], unique=True)
    op.create_table('gig_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('requester_id', sa.Integer(), nullable=True),
    sa.Column('content_creator_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['content_creator_id'], ['user_entity.id'], ),
    sa.ForeignKeyConstraint(['requester_id'], ['user_entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gig_event_timestamp'), 'gig_event', ['timestamp'], unique=False)
    op.create_table('gig_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('requester_id', sa.Integer(), nullable=True),
    sa.Column('content_creator_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['content_creator_id'], ['user_entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_gig_request_timestamp'), 'gig_request', ['timestamp'], unique=False)
    op.create_table('gig_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=140), nullable=True),
    sa.Column('description', sa.String(length=1000), nullable=True),
    sa.Column('cost', sa.Integer(), nullable=True),
    sa.Column('owner', sa.Integer(), nullable=True),
    sa.Column('duration', sa.Interval(), nullable=True),
    sa.ForeignKeyConstraint(['owner'], ['user_entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('sender_name', sa.String(length=64), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('read_status', sa.Boolean(), nullable=True),
    sa.Column('category', sa.Enum('Message', 'Feedback', 'Complaint', 'Report', name='messagetypeenum'), nullable=True),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['user_entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_message_timestamp'), 'message', ['timestamp'], unique=False)
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('read_status', sa.Boolean(), nullable=True),
    sa.Column('category', sa.Enum('General', 'Gig_notification', 'Stream_notification', 'Subscription_notification', 'Transaction_notification', name='notificationtypeenum'), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['user_entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notification_timestamp'), 'notification', ['timestamp'], unique=False)
    op.create_table('payment_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('sender_id', sa.Integer(), nullable=True),
    sa.Column('receiver_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_id'], ['user_entity.id'], ),
    sa.ForeignKeyConstraint(['sender_id'], ['user_entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_payment_transaction_timestamp'), 'payment_transaction', ['timestamp'], unique=False)
    op.create_table('post',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('body', sa.String(length=140), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user_entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_post_timestamp'), 'post', ['timestamp'], unique=False)
    op.create_table('stream_event',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user_entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stream_event_timestamp'), 'stream_event', ['timestamp'], unique=False)
    op.create_table('subscriber',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscriber_id', sa.Integer(), nullable=True),
    sa.Column('subscribed_id', sa.Integer(), nullable=True),
    sa.Column('is_paid', sa.Boolean(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=True),
    sa.Column('renew_status', sa.Boolean(), nullable=True),
    sa.Column('renew_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['subscribed_id'], ['user_entity.id'], ),
    sa.ForeignKeyConstraint(['subscriber_id'], ['user_entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('top_up_transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user_entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_top_up_transaction_timestamp'), 'top_up_transaction', ['timestamp'], unique=False)
    op.create_table('video',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('thumbnail', sa.String(), nullable=True),
    sa.Column('likes', sa.Integer(), nullable=True),
    sa.Column('view_count', sa.Integer(), nullable=True),
    sa.Column('download_count', sa.Integer(), nullable=True),
    sa.Column('is_free', sa.Boolean(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user_entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_video_timestamp'), 'video', ['timestamp'], unique=False)
    op.create_table('video_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('category_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['user_entity.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('video_category')
    op.drop_index(op.f('ix_video_timestamp'), table_name='video')
    op.drop_table('video')
    op.drop_index(op.f('ix_top_up_transaction_timestamp'), table_name='top_up_transaction')
    op.drop_table('top_up_transaction')
    op.drop_table('subscriber')
    op.drop_index(op.f('ix_stream_event_timestamp'), table_name='stream_event')
    op.drop_table('stream_event')
    op.drop_index(op.f('ix_post_timestamp'), table_name='post')
    op.drop_table('post')
    op.drop_index(op.f('ix_payment_transaction_timestamp'), table_name='payment_transaction')
    op.drop_table('payment_transaction')
    op.drop_index(op.f('ix_notification_timestamp'), table_name='notification')
    op.drop_table('notification')
    op.drop_index(op.f('ix_message_timestamp'), table_name='message')
    op.drop_table('message')
    op.drop_table('gig_type')
    op.drop_index(op.f('ix_gig_request_timestamp'), table_name='gig_request')
    op.drop_table('gig_request')
    op.drop_index(op.f('ix_gig_event_timestamp'), table_name='gig_event')
    op.drop_table('gig_event')
    op.drop_index(op.f('ix_user_entity_username'), table_name='user_entity')
    op.drop_index(op.f('ix_user_entity_email'), table_name='user_entity')
    op.drop_table('user_entity')
    # ### end Alembic commands ###
